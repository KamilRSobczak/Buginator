version: '3.7'

services:
  artemis:
    image: vromero/activemq-artemis:2.6.3-alpine
    container_name: artemis
    restart: always
    environment:
      ARTEMIS_USERNAME: artemis
      ARTEMIS_PASSWORD: artemis
    ports:
      - 8161:8161
      - 61616:61616
    volumes:
      - ./docker_init_files/artemis:/var/lib/artemis/etc-override

  postgres:
    image: postgres:9.5
    container_name: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: buginator
      POSTGRES_USER: Buginator
      POSTGRES_DB: Buginator
    ports:
      - 5432:5432
    volumes:
      - ./docker_init_files/postgres:/docker-entrypoint-initdb.d/

  redis:
    image: redis:5.0.3
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ./docker_init_files/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  buginator-auth:
    build: ./services/BuginatorAuth
    container_name: buginator-auth
    restart: always
    depends_on:
      - artemis
      - postgres
      - redis

  buginator-gateway:
    build: ./services/BuginatorGateway
    container_name: buginator-gateway
    restart: always
    ports:
      - 8100:8100
    depends_on:
      - artemis
      - postgres
      - redis
      - buginator-auth

  buginator-app:
    build: ./services/Buginator
    container_name: buginator-app
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - artemis
      - postgres
      - redis
      - buginator-auth

  buginator-angular:
    image: alexsuch/angular-cli:7.2.2
    container_name: buginator-angular
    restart: always
    volumes:
      - ./BuginatorWebfront:/opt/apps
    working_dir: /opt/apps/
    ports:
      - 4200:4200
    depends_on:
      - buginator-gateway
    command: ng serve --host 0.0.0.0

  email-sender:
    build: ./EmailSender
    container_name: email-sender
    restart: always
    depends_on:
      - artemis

  prometheus:
    image: prom/prometheus:v2.8.0
    container_name: prometheus
    restart: always
    volumes:
      - ./docker_init_files/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    command: "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:6.0.2
    container_name: grafana
    restart: always
    env_file:
      - ./docker_init_files/grafana/enviornment.properties
    ports:
      - 3000:3000
    volumes:
      - ./docker_init_files/grafana/provisioning/:/etc/grafana/provisioning/
      - ./docker_init_files/grafana/dashboards:/var/lib/grafana/dashboards